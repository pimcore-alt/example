name: PHP Code Scan

# Trigger the workflow when pushing to any branch
on:
  push:
    branches:
      - main 
      - scan
      - test
        # or any other branch you want to scan on push
  pull_request: # Optionally, run on pull requests as well

jobs:
  phpstan:
    runs-on: ubuntu-latest

    steps:
    # Checkout the latest code
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up PHP environment
    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'  # Use the appropriate PHP version for your project
 
    # Optional: Ensure PHPStan and PHP_CodeSniffer are installed
#    - name: Install PHPStan and PHP_CodeSniffer
 #     run: composer require --dev phpstan/phpstan squizlabs/php_codesniffer phpmd/phpmd friendsofphp/php-cs-fixer vimeo/psalm

    # Install PHP dependencies
 #   - name: Install dependencies
  #    run: composer install --no-progress --no-suggest --prefer-dist

        ## Download Local PHP Security Checker binary

    - name: Download Local PHP Security Checker
      run: |
          wget https://github.com/fabpot/local-php-security-checker/releases/download/v2.1.3/local-php-security-checker_linux_amd64
          mv local-php-security-checker_linux_amd64 local-php-security-checker
          chmod +x local-php-security-checker

    # Debug step to list contents of vendor/bin
    - name: List vendor/bin directory
      run: ls -l vendor/bin

    - name: List project directory
      run: ls -la

    - name: Scan the php code
      run: ./local-php-security-checker .

    # Run PHPStan for static code analysis
 #   - name: Run PHPStan
#      run: vendor/bin/phpstan analyse --level=max src   # Adjust the level and directories based on your project structure

    # Optionally, you can use a linter like PHP_CodeSniffer
   #  - name: Run PHP_CodeSniffer
   #    run: vendor/bin/phpcs --standard=PSR12 src

 #   - name: Run PHPMD
 #     run: vendor/bin/phpmd src

 #    - name: Run PHP-CS-Fixer
   #    run: vendor/bin/php-cs-fixer fix src/

#    - name: Run PHP psalm
#      run: vendor/bin/psalm src
    - name: Install Trivy
      run: |
        sudo apt-get install -y wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install -y trivy

    - name: Run Trivy Scan
      run: trivy fs --scanners vuln --severity HIGH,CRITICAL --ignore-unfixed .
